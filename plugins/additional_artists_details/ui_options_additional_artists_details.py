# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './plugins/additional_artists_details/options_additional_artists_details.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AdditionalArtistsDetailsOptionsPage(object):
    def setupUi(self, AdditionalArtistsDetailsOptionsPage):
        AdditionalArtistsDetailsOptionsPage.setObjectName("AdditionalArtistsDetailsOptionsPage")
        AdditionalArtistsDetailsOptionsPage.resize(561, 802)
        AdditionalArtistsDetailsOptionsPage.setMinimumSize(QtCore.QSize(100, 0))
        self.verticalLayout = QtWidgets.QVBoxLayout(AdditionalArtistsDetailsOptionsPage)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scrollArea = QtWidgets.QScrollArea(AdditionalArtistsDetailsOptionsPage)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 543, 784))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gb_description = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.gb_description.setObjectName("gb_description")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.gb_description)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.format_description = QtWidgets.QLabel(self.gb_description)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_description.sizePolicy().hasHeightForWidth())
        self.format_description.setSizePolicy(sizePolicy)
        self.format_description.setWordWrap(True)
        self.format_description.setObjectName("format_description")
        self.verticalLayout_3.addWidget(self.format_description)
        self.verticalLayout_2.addWidget(self.gb_description)
        self.gb_process_track_artists = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.gb_process_track_artists.setObjectName("gb_process_track_artists")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.gb_process_track_artists)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label = QtWidgets.QLabel(self.gb_process_track_artists)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.verticalLayout_4.addWidget(self.label)
        self.cb_process_tracks = QtWidgets.QCheckBox(self.gb_process_track_artists)
        self.cb_process_tracks.setObjectName("cb_process_tracks")
        self.verticalLayout_4.addWidget(self.cb_process_tracks)
        self.verticalLayout_2.addWidget(self.gb_process_track_artists)
        self.gb_area_details = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.gb_area_details.setObjectName("gb_area_details")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.gb_area_details)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_2 = QtWidgets.QLabel(self.gb_area_details)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_5.addWidget(self.label_2)
        self.cb_area_details = QtWidgets.QCheckBox(self.gb_area_details)
        self.cb_area_details.setObjectName("cb_area_details")
        self.verticalLayout_5.addWidget(self.cb_area_details)
        self.verticalLayout_2.addWidget(self.gb_area_details)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout.addWidget(self.scrollArea)

        self.retranslateUi(AdditionalArtistsDetailsOptionsPage)
        QtCore.QMetaObject.connectSlotsByName(AdditionalArtistsDetailsOptionsPage)

    def retranslateUi(self, AdditionalArtistsDetailsOptionsPage):
        _translate = QtCore.QCoreApplication.translate
        AdditionalArtistsDetailsOptionsPage.setWindowTitle(_translate("AdditionalArtistsDetailsOptionsPage", "Form"))
        self.gb_description.setTitle(_translate("AdditionalArtistsDetailsOptionsPage", "Additional Artists Details"))
        self.format_description.setText(_translate("AdditionalArtistsDetailsOptionsPage", "<html><head/><body><p>These settings will determine how the <span style=\" font-weight:600;\">Additional Artists Details</span> plugin operates.</p><p>Please visit the repository on GitHub for <a href=\"https://github.com/rdswift/picard-plugins/blob/2.0_RDS_Plugins/plugins/additional_artists_details/docs/README.md\"><span style=\" text-decoration: underline; color:#0000ff;\">additional information</span></a>.</p></body></html>"))
        self.gb_process_track_artists.setTitle(_translate("AdditionalArtistsDetailsOptionsPage", "Process Track Artists"))
        self.label.setText(_translate("AdditionalArtistsDetailsOptionsPage", "<html><head/><body><p>This option determines whether or not details are retrieved for all track artists on the release. If you are only interested in details for the album artists then this should be disabled, thus significantly reducing the number of additional calls made to the MusicBrainz api and reducing the time required to load a release.  Album artists are always processed.</p></body></html>"))
        self.cb_process_tracks.setText(_translate("AdditionalArtistsDetailsOptionsPage", "Process track artists"))
        self.gb_area_details.setTitle(_translate("AdditionalArtistsDetailsOptionsPage", "Include Area Details"))
        self.label_2.setText(_translate("AdditionalArtistsDetailsOptionsPage", "<html><head/><body><p>This option determines whether or not County and Municipality information is included in the artist location variables created. Regardless of this setting, this information will be included if a County or Municipality is the area specified for an artist.</p></body></html>"))
        self.cb_area_details.setText(_translate("AdditionalArtistsDetailsOptionsPage", "Include area details"))
